
package server.completion;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;
import java.util.concurrent.Future;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "CompletionService", targetNamespace = "http://completion.server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CompletionService {


    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<server.completion.RollBackResponse>
     */
    @WebMethod(operationName = "rollBack")
    @RequestWrapper(localName = "rollBack", targetNamespace = "http://completion.server/", className = "server.completion.RollBack")
    @ResponseWrapper(localName = "rollBackResponse", targetNamespace = "http://completion.server/", className = "server.completion.RollBackResponse")
    public Response<RollBackResponse> rollBackAsync(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "rollBack")
    @RequestWrapper(localName = "rollBack", targetNamespace = "http://completion.server/", className = "server.completion.RollBack")
    @ResponseWrapper(localName = "rollBackResponse", targetNamespace = "http://completion.server/", className = "server.completion.RollBackResponse")
    public Future<?> rollBackAsync(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0,
            @WebParam(name = "asyncHandler", targetNamespace = "")
            AsyncHandler<RollBackResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns server.completion.ServiceResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rollBack", targetNamespace = "http://completion.server/", className = "server.completion.RollBack")
    @ResponseWrapper(localName = "rollBackResponse", targetNamespace = "http://completion.server/", className = "server.completion.RollBackResponse")
    public ServiceResponse rollBack(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<server.completion.CommitResponse>
     */
    @WebMethod(operationName = "commit")
    @RequestWrapper(localName = "commit", targetNamespace = "http://completion.server/", className = "server.completion.Commit")
    @ResponseWrapper(localName = "commitResponse", targetNamespace = "http://completion.server/", className = "server.completion.CommitResponse")
    public Response<CommitResponse> commitAsync(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "commit")
    @RequestWrapper(localName = "commit", targetNamespace = "http://completion.server/", className = "server.completion.Commit")
    @ResponseWrapper(localName = "commitResponse", targetNamespace = "http://completion.server/", className = "server.completion.CommitResponse")
    public Future<?> commitAsync(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0,
            @WebParam(name = "asyncHandler", targetNamespace = "")
            AsyncHandler<CommitResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns server.completion.ServiceResponse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "commit", targetNamespace = "http://completion.server/", className = "server.completion.Commit")
    @ResponseWrapper(localName = "commitResponse", targetNamespace = "http://completion.server/", className = "server.completion.CommitResponse")
    public ServiceResponse commit(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

}
